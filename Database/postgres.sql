CREATE TABLE IF NOT EXISTS  users(
   id INT PRIMARY KEY  UNIQUE NOT NULL,
   role INT NOT NULL,
   username TEXT  UNIQUE NOT NULL,
   password TEXT NOT NULL,
   email TEXT  UNIQUE NOT NULL,
   is_customer INT NOT NULL
);


CREATE TABLE IF NOT EXISTS  team(
  id INT PRIMARY KEY UNIQUE NOT NULL,
  name TEXT NOT NULL
  
);

CREATE TABLE IF NOT EXISTS project(
  id  INT UNIQUE PRIMARY KEY NOT NULL,
  name TEXT UNIQUE NOT NULL,
  team_id INT  REFERENCES team (id) ON DELETE CASCADE ON UPDATE CASCADE
  
);

CREATE TABLE IF NOT EXISTS team_has_user(
  team_id  INT REFERENCES team (id) NOT NULL,
  user_id INT REFERENCES users (id) NOT NULL
);

CREATE TABLE IF NOT EXISTS user_has_project(
  user_id INT REFERENCES users (id) NOT NULL,
  project_id INT REFERENCES project (id) ON DELETE CASCADE ON UPDATE CASCADE,
  permissions INT NOT NULL
);

CREATE TABLE IF NOT EXISTS sprint(
  id INT UNIQUE PRIMARY KEY NOT NULL,
  name TEXT UNIQUE NOT NULL,
  deadline TEXT UNIQUE NOT NULL,
  starting_date TEXT UNIQUE NOT NULL,
  project_id INT REFERENCES project (id) ON DELETE CASCADE ON UPDATE CASCADE
  
);

CREATE TABLE IF NOT EXISTS epic(
  id INT UNIQUE PRIMARY KEY NOT NULL,
  date_due TEXT NOT NULL,
  description TEXT NOT NULL,
  sprint_id INT REFERENCES sprint (id),
   project_id INT REFERENCES project (id) ON DELETE CASCADE ON UPDATE CASCADE,
  user_id INT REFERENCES epic (id)ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS story(
  id INT UNIQUE PRIMARY KEY NOT NULL,
  description TEXT NOT NULL,
  type TEXT  NOT NULL,
  status TEXT  NOT NULL,
  priority TEXT NOT NULL,
  affects_versions TEXT,
  date_due TEXT NOT NULL,
  date_created TEXT NOT NULL,
  sprint_id INT NOT NULL REFERENCES sprint (id) ON DELETE CASCADE ON UPDATE CASCADE,
  epic_id INT NOT NULL REFERENCES epic (id)ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS task(
  id INT UNIQUE PRIMARY KEY NOT NULL,
   
  description TEXT NOT NULL,
  name TEXT NOT NULL,
  is_issue INT NOT NULL,
  story_id  INT NOT NULL REFERENCES story (id) ON DELETE CASCADE ON UPDATE CASCADE,
  sprint_id INT NOT NULL REFERENCES sprint (id)ON DELETE CASCADE ON UPDATE CASCADE
  
);


CREATE TABLE IF NOT EXISTS user_has_story(
    story_id  INT NOT NULL REFERENCES story (id) ON DELETE CASCADE ON UPDATE CASCADE,
  user_id  INT NOT NULL REFERENCES users (id) ON DELETE CASCADE ON UPDATE CASCADE,
  hours_worked INT NOT NULL 
);


CREATE TABLE IF NOT EXISTS user_has_tasks(
    task_id  INT NOT NULL REFERENCES task (id) ON DELETE CASCADE ON UPDATE CASCADE,
  user_id  INT NOT NULL REFERENCES users (id)ON DELETE CASCADE ON UPDATE CASCADE,
  hours_worked INT NOT NULL 
);

