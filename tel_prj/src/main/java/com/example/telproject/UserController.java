package com.example.telproject;

import com.example.telproject.database.User;
import com.example.telproject.database.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
//@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping(path="/signup")
	public String register(@RequestParam String email,
								   @RequestParam String username,
								   @RequestParam String firstname,
								   @RequestParam String lastname,

								   @RequestParam String password,
								   @RequestParam String reenterpassword) {


		if(!reenterpassword.equals(password) ){
			return "redirect:/signup";
		}

		User new_user= new User(email,username,firstname,lastname,password);
		userRepository.save(new_user);

		return "redirect:/home";
//		URI location = ServletUriComponentsBuilder
//				.fromCurrentRequest().path("/home")
//				.buildAndExpand().toUri();
//
//		//return ResponseEntity.created().body("Home");
//		return ResponseEntity.created(location).header("MyResponseHeader", "MyValue").body("Hello World");
	}


//		@GetMapping(path="/add") // Map ONLY GET Requests
//	public User addNewUser (@RequestParam String name
//			, @RequestParam String email) {
//		// @ResponseBody means the returned String is the response, not a view name
//		// @RequestParam means it is a parameter from the GET or POST request
//
//		 User n = new User();
//		 n.setEmail(email);
//		 n.setPassword("pass");
//		 n.setRole(1);
//		 n.setUsername(name);
//		 n.setAdmin_boolean(1);
//		 n.setCustomer_boolean(1);
//		 n.setFee(1);
//
//
//		 userRepository.save(n);
//
//		return n;
//	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		//User user =  new User();
		return userRepository.findAll();
	}
}
